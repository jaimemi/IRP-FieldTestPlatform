// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>


const char THING_ID[] = "c9d4b724-e406-4d7d-9964-070eae54f9ac";

const char SSID[]     = SECRET_SSID;    // Network SSID (name)
const char USER[]     = SECRET_USER;
const char PASS[]     = SECRET_PASS;    // Network password (use for WPA, or use as key for WEP)

void onIPvFChange();
void onIPvNfChange();
void onPPvNfChange();
void onVPvNfChange();
void onPPvFChange();
void onVPvFChange();
void onAltWsChange();
void onTempWsChange();
void onPresWsChange();
void onCountsWs415nmF1Change();
void onCountsWs445nmF2Change();
void onCountsWs480nmF3Change();
void onCountsWs515nmF4Change();
void onCountsWs555nmF5Change();
void onCountsWs590nmF6Change();
void onCountsWs630nmF7Change();
void onCountsWs680nmF8Change();
void onCountsWsCLEARChange();
void onCountsWsNIRChange();
void onCountsEc415nmF1Change();
void onCountsEc445nmF2Change();
void onCountsEc480nmF3Change();
void onCountsEc515nmF4Change();
void onCountsEc555nmF5Change();
void onCountsEc590nmF6Change();
void onCountsEc630nmF7Change();
void onCountsEc680nmF8Change();
void onCountsEcCLEARChange();
void onCountsEcNIRChange();
void onPEcChange();
void onVEcChange();
void onTempEcInt1Change();
void onTempEcInt2Change();
void onTempEcInt3Change();
void onTempEcK1Change();
void onTempEcK2Change();
void onTempEcK3Change();
void onIEcChange();

float temp_pv_k_rtf;
float temp_pv_int_rtf;
float temp_pv_int_ltf;
float temp_pv_k_ltf;
float temp_pv_int_rbf;
float temp_pv_k_rbf;
float temp_pv_int_lbf;
float temp_pv_int_rtnf;
float temp_pv_k_rtnf;
float temp_pv_int_ltnf;
float temp_pv_k_ltnf;
float temp_pv_int_rbnf;
float temp_pv_k_rbnf;
float temp_pv_int_lbnf;
float temp_pv_k_lbnf;
int i_pv_f;
int i_pv_nf;
int p_pv_nf;
int v_pv_nf;
int p_pv_f;
int v_pv_f;
int alt_ws;
float temp_ws;
int pres_ws;
int counts_ws_415nm_F1;
int counts_ws_445nm_F2;
int counts_ws_480nm_F3;
int counts_ws_515nm_F4;
int counts_ws_555nm_F5;
int counts_ws_590nm_F6;
int counts_ws_630nm_F7;
int counts_ws_680nm_F8;
int counts_ws_CLEAR;
int counts_ws_NIR;
float temp_pv_k_lbf;
int counts_ec_415nm_F1;
int counts_ec_445nm_F2;
int counts_ec_480nm_F3;
int counts_ec_515nm_F4;
int counts_ec_555nm_F5;
int counts_ec_590nm_F6;
int counts_ec_630nm_F7;
int counts_ec_680nm_F8;
int counts_ec_CLEAR;
int counts_ec_NIR;
int p_ec;
int v_ec;
float temp_ec_int_1;
float temp_ec_int_2;
float temp_ec_int_3;
float temp_ec_k_1;
float temp_ec_k_2;
float temp_ec_k_3;
int i_ec;

void initProperties(){

  ArduinoCloud.setThingId(THING_ID);
  ArduinoCloud.addProperty(temp_pv_k_rtf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_int_rtf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_int_ltf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_k_ltf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_int_rbf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_k_rbf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_int_lbf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_int_rtnf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_k_rtnf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_int_ltnf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_k_ltnf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_int_rbnf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_k_rbnf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_int_lbnf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(temp_pv_k_lbnf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(i_pv_f, READWRITE, 10 * SECONDS, onIPvFChange);
  ArduinoCloud.addProperty(i_pv_nf, READWRITE, 10 * SECONDS, onIPvNfChange);
  ArduinoCloud.addProperty(p_pv_nf, READWRITE, 10 * SECONDS, onPPvNfChange);
  ArduinoCloud.addProperty(v_pv_nf, READWRITE, 10 * SECONDS, onVPvNfChange);
  ArduinoCloud.addProperty(p_pv_f, READWRITE, 10 * SECONDS, onPPvFChange);
  ArduinoCloud.addProperty(v_pv_f, READWRITE, 10 * SECONDS, onVPvFChange);
  ArduinoCloud.addProperty(alt_ws, READWRITE, 10 * SECONDS, onAltWsChange);
  ArduinoCloud.addProperty(temp_ws, READWRITE, 10 * SECONDS, onTempWsChange);
  ArduinoCloud.addProperty(pres_ws, READWRITE, 10 * SECONDS, onPresWsChange);
  ArduinoCloud.addProperty(counts_ws_415nm_F1, READWRITE, 10 * SECONDS, onCountsWs415nmF1Change);
  ArduinoCloud.addProperty(counts_ws_445nm_F2, READWRITE, 10 * SECONDS, onCountsWs445nmF2Change);
  ArduinoCloud.addProperty(counts_ws_480nm_F3, READWRITE, 10 * SECONDS, onCountsWs480nmF3Change);
  ArduinoCloud.addProperty(counts_ws_515nm_F4, READWRITE, 10 * SECONDS, onCountsWs515nmF4Change);
  ArduinoCloud.addProperty(counts_ws_555nm_F5, READWRITE, 10 * SECONDS, onCountsWs555nmF5Change);
  ArduinoCloud.addProperty(counts_ws_590nm_F6, READWRITE, 10 * SECONDS, onCountsWs590nmF6Change);
  ArduinoCloud.addProperty(counts_ws_630nm_F7, READWRITE, 10 * SECONDS, onCountsWs630nmF7Change);
  ArduinoCloud.addProperty(counts_ws_680nm_F8, READWRITE, 10 * SECONDS, onCountsWs680nmF8Change);
  ArduinoCloud.addProperty(counts_ws_CLEAR, READWRITE, 10 * SECONDS, onCountsWsCLEARChange);
  ArduinoCloud.addProperty(counts_ws_NIR, READWRITE, 10 * SECONDS, onCountsWsNIRChange);
  ArduinoCloud.addProperty(temp_pv_k_lbf, READ, 10 * SECONDS, NULL);
  ArduinoCloud.addProperty(counts_ec_415nm_F1, READWRITE, 10 * SECONDS, onCountsEc415nmF1Change);
  ArduinoCloud.addProperty(counts_ec_445nm_F2, READWRITE, 10 * SECONDS, onCountsEc445nmF2Change);
  ArduinoCloud.addProperty(counts_ec_480nm_F3, READWRITE, 10 * SECONDS, onCountsEc480nmF3Change);
  ArduinoCloud.addProperty(counts_ec_515nm_F4, READWRITE, 10 * SECONDS, onCountsEc515nmF4Change);
  ArduinoCloud.addProperty(counts_ec_555nm_F5, READWRITE, 10 * SECONDS, onCountsEc555nmF5Change);
  ArduinoCloud.addProperty(counts_ec_590nm_F6, READWRITE, 10 * SECONDS, onCountsEc590nmF6Change);
  ArduinoCloud.addProperty(counts_ec_630nm_F7, READWRITE, 10 * SECONDS, onCountsEc630nmF7Change);
  ArduinoCloud.addProperty(counts_ec_680nm_F8, READWRITE, 10 * SECONDS, onCountsEc680nmF8Change);
  ArduinoCloud.addProperty(counts_ec_CLEAR, READWRITE, 10 * SECONDS, onCountsEcCLEARChange);
  ArduinoCloud.addProperty(counts_ec_NIR, READWRITE, 10 * SECONDS, onCountsEcNIRChange);
  ArduinoCloud.addProperty(p_ec, READWRITE, 10 * SECONDS, onPEcChange);
  ArduinoCloud.addProperty(v_ec, READWRITE, 10 * SECONDS, onVEcChange);
  ArduinoCloud.addProperty(temp_ec_int_1, READWRITE, 10 * SECONDS, onTempEcInt1Change);
  ArduinoCloud.addProperty(temp_ec_int_2, READWRITE, 10 * SECONDS, onTempEcInt2Change);
  ArduinoCloud.addProperty(temp_ec_int_3, READWRITE, 10 * SECONDS, onTempEcInt3Change);
  ArduinoCloud.addProperty(temp_ec_k_1, READWRITE, 10 * SECONDS, onTempEcK1Change);
  ArduinoCloud.addProperty(temp_ec_k_2, READWRITE, 10 * SECONDS, onTempEcK2Change);
  ArduinoCloud.addProperty(temp_ec_k_3, READWRITE, 10 * SECONDS, onTempEcK3Change);
  ArduinoCloud.addProperty(i_ec, READWRITE, 10 * SECONDS, onIEcChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, USER, PASS);
